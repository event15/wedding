<!DOCTYPE html>
<html>
<head>
    <meta charset=utf-8>
    <meta http-equiv=X-UA-Compatible content="IE=edge">
    <meta name=viewport content="width=device-width,initial-scale=1">
    <link rel="shortcut icon" href={{ asset('/favicon.ico') }}>
    <title>html</title>
    <link rel=preload as=script href={{ asset('/js/vendor.d50c1817.js') }}>
    <link rel=preload as=script href={{ asset('/js/app.eeb58b7a.js') }}>
    <link rel=preload as=script href="//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js">
    <link rel=preload as=script href="https://cdnjs.cloudflare.com/ajax/libs/gsap/latest/TweenMax.min.js">
    <link rel=preload as=style href={{ asset('/css/app.0a7c9a7c.css') }}>
    <link href={{ asset('/css/app.0a7c9a7c.css') }} rel=stylesheet>
</head>
<body>
<noscript><strong>We're sorry but html doesn't work properly without JavaScript enabled. Please enable it to
        continue.</strong></noscript>
<div id=app></div>
<script type=text/javascript>(function (r) {
        var n = window["webpackJsonp"];
        window["webpackJsonp"] = function (e, u, c) {
            for (var i, f, p, l = 0, a = []; l < e.length; l++) f = e[l], t[f] && a.push(t[f][0]), t[f] = 0;
            for (i in u) Object.prototype.hasOwnProperty.call(u, i) && (r[i] = u[i]);
            n && n(e, u, c);
            while (a.length) a.shift()();
            if (c) for (l = 0; l < c.length; l++) p = o(o.s = c[l]);
            return p
        };
        var e = {}, t = {2: 0};

        function o(n) {
            if (e[n]) return e[n].exports;
            var t = e[n] = {i: n, l: !1, exports: {}};
            return r[n].call(t.exports, t, t.exports, o), t.l = !0, t.exports
        }

        o.m = r, o.c = e, o.d = function (r, n, e) {
            o.o(r, n) || Object.defineProperty(r, n, {configurable: !1, enumerable: !0, get: e})
        }, o.n = function (r) {
            var n = r && r.__esModule ? function () {
                return r["default"]
            } : function () {
                return r
            };
            return o.d(n, "a", n), n
        }, o.o = function (r, n) {
            return Object.prototype.hasOwnProperty.call(r, n)
        }, o.p = "/", o.oe = function (r) {
            throw console.error(r), r
        }
    })([]);

    // Create Countdown
    var Countdown = {

        // Backbone-like structure
        $el: $('.countdown'),

        // Params
        countdown_interval: null,
        total_seconds     : 0,

        // Initialize the countdown
        init: function() {

            // DOM
            this.$ = {
                hours  : this.$el.find('.bloc-time.hours .figure'),
                minutes: this.$el.find('.bloc-time.min .figure'),
                seconds: this.$el.find('.bloc-time.sec .figure')
            };

            // Init countdown values
            this.values = {
                hours  : this.$.hours.parent().attr('data-init-value'),
                minutes: this.$.minutes.parent().attr('data-init-value'),
                seconds: this.$.seconds.parent().attr('data-init-value'),
            };

            // Initialize total seconds
            this.total_seconds = this.values.hours * 60 * 60 + (this.values.minutes * 60) + this.values.seconds;

            // Animate countdown to the end
            this.count();
        },

        count: function() {

            var that    = this,
                $hour_1 = this.$.hours.eq(0),
                $hour_2 = this.$.hours.eq(1),
                $min_1  = this.$.minutes.eq(0),
                $min_2  = this.$.minutes.eq(1),
                $sec_1  = this.$.seconds.eq(0),
                $sec_2  = this.$.seconds.eq(1);

            this.countdown_interval = setInterval(function() {

                if(that.total_seconds > 0) {

                    --that.values.seconds;

                    if(that.values.minutes >= 0 && that.values.seconds < 0) {

                        that.values.seconds = 59;
                        --that.values.minutes;
                    }

                    if(that.values.hours >= 0 && that.values.minutes < 0) {

                        that.values.minutes = 59;
                        --that.values.hours;
                    }

                    // Update DOM values
                    // Hours
                    that.checkHour(that.values.hours, $hour_1, $hour_2);

                    // Minutes
                    that.checkHour(that.values.minutes, $min_1, $min_2);

                    // Seconds
                    that.checkHour(that.values.seconds, $sec_1, $sec_2);

                    --that.total_seconds;
                }
                else {
                    clearInterval(that.countdown_interval);
                }
            }, 1000);
        },

        animateFigure: function($el, value) {

            var that         = this,
                $top         = $el.find('.top'),
                $bottom      = $el.find('.bottom'),
                $back_top    = $el.find('.top-back'),
                $back_bottom = $el.find('.bottom-back');

            // Before we begin, change the back value
            $back_top.find('span').html(value);

            // Also change the back bottom value
            $back_bottom.find('span').html(value);

            // Then animate
            TweenMax.to($top, 0.8, {
                rotationX           : '-180deg',
                transformPerspective: 300,
                ease                : Quart.easeOut,
                onComplete          : function() {

                    $top.html(value);

                    $bottom.html(value);

                    TweenMax.set($top, { rotationX: 0 });
                }
            });

            TweenMax.to($back_top, 0.8, {
                rotationX           : 0,
                transformPerspective: 300,
                ease                : Quart.easeOut,
                clearProps          : 'all'
            });
        },

        checkHour: function(value, $el_1, $el_2) {

            var val_1       = value.toString().charAt(0),
                val_2       = value.toString().charAt(1),
                fig_1_value = $el_1.find('.top').html(),
                fig_2_value = $el_2.find('.top').html();

            if(value >= 10) {

                // Animate only if the figure has changed
                if(fig_1_value !== val_1) this.animateFigure($el_1, val_1);
                if(fig_2_value !== val_2) this.animateFigure($el_2, val_2);
            }
            else {

                // If we are under 10, replace first figure with 0
                if(fig_1_value !== '0') this.animateFigure($el_1, 0);
                if(fig_2_value !== val_1) this.animateFigure($el_2, val_1);
            }
        }
    };

    // Let's go !
    Countdown.init();
    //# sourceMappingURL=/js/manifest.bb41d6d8.js.map</script>
<script type=text/javascript src={{  asset('/js/vendor.d50c1817.js') }}></script>
<script type=text/javascript src={{ asset('/js/app.eeb58b7a.js') }}></script>
</body>
</html>